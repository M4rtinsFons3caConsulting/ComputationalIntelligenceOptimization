Metadata-Version: 2.4
Name: rubix
Version: 0.1.0a1
Summary: A Numba Optimized Genetic Algorithm Framework for Combinatorial Problems
Author: Group AI - MsC in Data Science @NovaIMS 2024/2025
License-Expression: MIT
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: numba
Requires-Dist: scipy
Requires-Dist: openpyxl
Requires-Dist: matplotlib
Requires-Dist: ipykernel
Requires-Dist: seaborn
Dynamic: license-file

DISCLAIMER: Much of this README.md has been generated automaticall and is still under revision. 

# Computational Intelligence Optimization (RuBiX)

RuBiX is a Numba-optimized Genetic Algorithm Framework designed for solving combinatorial problems. It offers efficient and scalable solutions by leveraging modern computational techniques.

## Current Version Capabilities

### Version: `0.1.0-alpha.1` (Alpha Release)

This is the **first alpha version** of the RuBiX package, which introduces core functionality for solving combinatorial optimization problems using **genetic algorithms** (GAs). While it is not yet stable or feature-complete, it provides the following capabilities:

- **Solution Manipulator**: A class to handle the modification of solutions based on user-defined constraints, allowing for the following operations:
  - **One-column wide constraints**: Can be shuffled or rolled.
  - **Two-column wide constraints**: Can be shuffled, rolled, or swapped.
  
- **Mutation Operations**: The framework supports different types of mutation operations including:
  - **Shuffle**: Applied at the gene, column, or subset levels with customizable probabilities.
  
- **Crossover Operations**: Crossover occurs on a gene-by-gene basis where corresponding elements from two individuals are swapped based on differences in a subset.

- **Optimization Framework**: The package is designed to work with various combinatorial problems like the Traveling Salesman Problem (TSP) and Knapsack Problem.

Please note that this version is an **alpha release** and is intended for testing and feedback. Expect potential instability and missing features.

---

## Installation

To install and run the package, follow these steps:

### 1. Install the Package

To install the `rubix` package into your current environment, after forking, use the following command:

```bash
pip install .
```

### 2. Ensure the `pyproject.toml` is Present

The `pyproject.toml` file must be present in the root directory of the project for proper installation and configuration. This file contains metadata about the package, including dependencies, versioning, and build requirements.

### 3. Ensure `pip` is Installed

Since the installation uses `.toml` files for configuration, you must have `pip` installed in your environment. You can verify or install `pip` using the following command:

```bash
python -m ensurepip --upgrade
```

---

## Requirements

The package depends on the following Python libraries:

* `numpy`
* `numba`
* `scipy`
* `openpyxl`
* `matplotlib`
* `ipykernel`
* `seaborn`

These dependencies will be automatically installed during the setup process.

---

## Package Overview

RuBiX is built to offer an optimized framework for **genetic algorithms** applied to **combinatorial problems**. It leverages **Numba** to improve performance and scalability by compiling the code into machine-level instructions. This results in faster execution times for complex genetic operations.

### Key Features:

* **Numba Optimization**: Speedup the execution of genetic algorithm operations using JIT (Just-In-Time) compilation.
* **Genetic Algorithm Framework**: Core operations such as **mutation**, **crossover**, and **selection** are included to facilitate the solving of optimization problems.
* **Flexible Constraints Handling**: Handles a variety of combinatorial constraints efficiently.
* **Combinatorial Problem Solving**: Primarily aimed at solving combinatorial optimization problems like the Traveling Salesman Problem (TSP) and Knapsack Problem.

---

## License

This package is licensed under the **MIT License**. See the `LICENSE` file for more details.

---

## Acknowledgements

* **Numba**: For providing the powerful JIT compiler that speeds up our genetic algorithm operations.
* **Scipy** and **NumPy**: For providing essential scientific computing tools.
* **Matplotlib**: For visualizing results and performance metrics.

---

## Documentation

Full documentation for the package, including API references and guides, might be available soon.

---

## Changelog

### \[0.1.0-alpha.1] - 2025-05-04

* Initial alpha version of RuBiX with basic functionality for solution manipulation and mutation.

---

## Roadmap

### Planned Features:

* Full **crossover** operations
* Enhanced **constraint handling**

### Future Milestones:

* Move to **beta** phase
* Finalize core optimization algorithms
* Include comprehensive performance benchmarks

---

## Contact

For questions, contributions, or collaborations, you can reach us at:

* Email: [r2015469@novaims.unl.com](mailto:r2015469@novaims.unl.com)
* GitHub: [https://github.com/M4rtinsFons3caConsulting/ComputationalIntelligenceOptimization](https://github.com/M4rtinsFons3caConsulting/ComputationalIntelligenceOptimization)
